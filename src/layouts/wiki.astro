---
import type { Dayjs } from 'dayjs'

import BaseLayout from './base.astro'
import MetadataTable from '$components/metadataTable.astro'
import { Icon } from 'react-iconify-icon-wrapper'

import { stringifyDate } from '$functions/stringifyDate'
import { contentsgarten } from '$constants/contentsgarten'

export interface Props {
  title: string
  pageRef: string
  type?: 'page' | 'event'
  events?: {
    id: string
    location: string
    date: {
      from: Dayjs
      to?: Dayjs
    }
    hosts: string[]
    link: string
  }
  contents: {
    id: string
    label: string
  }[]
  metadata: {
    edited: {
      at: Dayjs
      by: string[]
    }
  }
}

const {
  title,
  contents,
  events,
  metadata,
  type = 'page',
  pageRef,
} = Astro.props

const editable = await contentsgarten(Astro.cookies.get('authgarten').value).getEditPermission.query({
  pageRef,
})
---

<BaseLayout>
  <h1 class="px-6 pb-8 text-center text-4xl sm:text-5xl uppercase break-words">
    {title}
  </h1>
  <div
    class="grid divide-x-2 divide-[#ededed] border-[#ededed] border-t-2 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-5"
  >
    <div class="col-span-1">
      <div
        class="sticky top-0 flex flex-col divide-y-2 divide-[#ededed] border-[#ededed] border-b-2 sm:border-none"
      >
        {
          type === 'event' && events ? (
            <Fragment>
              <img
                src={`/images/events/${events.id}.png`}
                class="aspect-square w-full"
              />
              <section class="p-6">
                <h2 class="pb-6 text-center font-medium">EVENTS</h2>
                <MetadataTable
                  data={[
                    ['LOCATION', events.location ?? ''],
                    [
                      'DATE',
                      [
                        `${events.date.to ? 'FROM ' : ''}${stringifyDate(
                          events.date.from
                        )}`,
                        ...(events.date.to
                          ? [`TO ${stringifyDate(events.date.to)}`]
                          : []),
                      ],
                    ],
                    ['HOST', (events.hosts ?? []).map(o => `[${o}]`).join(' ')],
                  ]}
                >
                  <tr slot="table">
                    <td>LINK</td>
                    <td>
                      <a
                        href={events.link}
                        class="break-all inline-flex items-center"
                      >
                        <>
                          <span class="mr-1">{new URL(events.link).host}</span>
                          <Icon icon="pixelarticons:external-link" />
                        </>
                      </a>
                    </td>
                  </tr>
                </MetadataTable>
              </section>
            </Fragment>
          ) : null
        }
        {
          contents.length > 0 && (
            <section class="p-6">
              <h2 class="pb-4 text-center font-medium">CONTENTS</h2>
              <ul class="list-inside list-disc text-sm">
                {contents.map(content => (
                  <li class="py-1">
                    <a
                      class="hover:text-sky-600 transition-all"
                      href={'#' + content.id}
                    >
                      {content.label}
                    </a>
                  </li>
                ))}
              </ul>
            </section>
          )
        }
        <section class="p-6">
          <h2 class="pb-4 text-center font-medium">METADATA</h2>
          <MetadataTable>
            <Fragment slot="table">
              <t>
                <td>EDIT</td>
                <td
                  ><span>{stringifyDate(metadata.edited.at)}</span> / <span
                    class="space-x-1"
                    >{
                      metadata.edited.by.map(user => (
                        <a href={`https://github.com/${user}`}>@{user}</a>
                      ))
                    }</span
                  >
                </td>
              </t>
              <tr>
                <td>HISTORY</td>
                <td
                  ><a
                    href={`https://github.com/creatorsgarten/wiki/commits/main/wiki/${pageRef}.md`}
                    class="inline-flex items-center"
                    ><span class="mr-1">GitHub</span><Icon
                      icon="pixelarticons:external-link"
                    /></a
                  ></td
                >
              </tr>
            </Fragment>
          </MetadataTable>
        </section>
        <section class="p-6">
          <h2 class="pb-4 text-center font-medium">EDIT</h2>
          <textarea class="w-full h-48 text-xs font-mono p-4 rounded-xl">{JSON.stringify(editable)}</textarea>
        </section>
        <section class="p-6">
          <h2 class="pb-4 text-center font-medium">SHARE</h2>
          <div class="flex justify-center space-x-4">
            <a
              target="_blank"
              rel="noopener noreferrer"
              href={`https://twitter.com/intent/tweet?${new URLSearchParams({
                url: Astro.url.toString(),
                text: 'Check this',
                via: 'Creatorsgarten',
              }).toString()}`}
            >
              <Icon icon="mdi:twitter" width={24} />
            </a>
            <a
              target="_blank"
              rel="noopener noreferrer"
              href={`https://www.facebook.com/dialog/share?${new URLSearchParams(
                {
                  app_id: '2314627122104275',
                  href: Astro.url.toString(),
                  feature: 'share',
                  display: 'popup',
                }
              ).toString()}`}
            >
              <Icon icon="mdi:facebook" width={24} />
            </a>
          </div>
        </section>
      </div>
    </div>
    <div
      class="col-span-1 px-6 md:px-12 py-10 sm:col-span-2 md:col-span-3 xl:col-span-4 min-h-[calc(100vh-24rem)]"
    >
      <slot />
    </div>
  </div>
</BaseLayout>
