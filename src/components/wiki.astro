---
import dayjs from 'dayjs'

import BaseLayout from '$layouts/base.astro'
import WikiLayout from '$layouts/wiki.astro'
import ContentRenderer from './contentRenderer.astro'
import Head from './head.astro'
import WikiSidebar from './wikiSidebar.astro'
import WikiEditor from './wikiEditor.astro'

import { getMarkdownFromSlug } from '$functions/getMarkdownFromSlug'
import { formatPageRef } from '$functions/formatPageRef'

import type { EventFrontmatter } from '$types/EventFrontmatter'

import '@fontsource/inter/latin-400.css'
import '@fontsource/inter/latin-500.css'
import '@fontsource/inter/latin-700.css'
import { Icon } from 'react-iconify-icon-wrapper'

export interface Props {
  pageRef: string
  mode?: 'view' | 'editor'
}

let { pageRef, mode = 'view' } = Astro.props

const markdown = await getMarkdownFromSlug<
  EventFrontmatter & { title: string }
>(pageRef)
const {
  status,
  targetPageRef,
  rendered,
  lastModified,
  lastModifiedBy,
  frontMatter,
  file,
} = markdown

if (
  status === 301 &&
  targetPageRef &&
  Astro.url.searchParams.get('redirect') !== 'no'
) {
  Astro.response.status = 301
  Astro.response.headers.set('Location', `/wiki/${targetPageRef}`)
} else if (status === 404) {
  Astro.response.status = 404
} else if (status === 500) {
  Astro.response.status = 500
}

const title = frontMatter.title || formatPageRef(pageRef as string)
const editable = !!file
const editing = mode === 'editor' && editable ? file : null
---

<Head title={mode === 'view' ? title + ' Â· Wiki' : 'Editor'} />

{
  status === 200 || editing ? (
    <WikiLayout title={title}>
      <WikiSidebar
        slot="sidebar"
        pageRef={pageRef}
        contents={rendered!.headings}
        editable={editable}
        metadata={{
          edited: {
            at: dayjs(lastModified),
            by: lastModifiedBy ?? ['SYSTEM'],
          },
        }}
        {...(pageRef.startsWith('Events/')
          ? {
              type: 'event',
              events: {
                id: pageRef.replace('Events/', ''),
                location: frontMatter.location,
                date: {
                  from: dayjs(frontMatter.date),
                  to: frontMatter.endDate
                    ? dayjs(frontMatter.endDate)
                    : undefined,
                },
                hosts: frontMatter.hosts,
                link: frontMatter.site,
              },
            }
          : {
              type: 'page',
            })}
      />
      {editing ? (
        <WikiEditor pageRef={pageRef} file={editing} />
      ) : (
        <ContentRenderer content={rendered!.html} pageRef={pageRef} />
      )}
    </WikiLayout>
  ) : (
    <BaseLayout>
      <div class="px-6 pb-10">
        <div class="mx-auto max-w-6xl">
          <h1 class="mb-8 text-3xl">{pageRef}</h1>
          <ContentRenderer content={rendered!.html} pageRef={pageRef} />
          {editable && (
            <div class="mt-8 flex">
              <a
                href={`/wiki/${pageRef}/editor`}
                class="inline-flex items-center space-x-2"
              >
                <span>Edit this page</span>
                <Icon icon="pixelarticons:edit" />
              </a>
            </div>
          )}
        </div>
      </div>
    </BaseLayout>
  )
}
