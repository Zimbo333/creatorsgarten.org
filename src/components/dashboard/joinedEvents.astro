---
import CFImage from '$components/cfImage.astro'
import { getEvents } from '$functions/getEvents'

import type { Event } from '$functions/getEvents'

export interface Props {
  eventIds: {
    id: number
    code: string
  }[]
}

const { eventIds } = Astro.props

const events = await getEvents()
const selectedEvents = eventIds
  .map(({ id, code }) => ({
    data: events.find(event => event.eventpopId === id) as Event,
    code,
  }))
  .filter(o => o.data !== undefined)
  .sort((a, b) => b.data.date.unix() - a.data.date.unix())
---

<section class="max-w-2xl mx-auto grid md:grid-cols-2 gap-4">
  {
    selectedEvents.map(event => (
      <div class="bg-gradient-to-br from-neutral-800 to-neutral-700 flex h-24 rounded-md overflow-hidden">
        <div class="h-full aspect-square shrink-0">
          <CFImage
            src={event.data.image}
            width={300}
            ratio={1}
            alt="cover"
            class="h-full w-auto grayscale"
          />
        </div>
        <div class="px-4 py-2 flex flex-col justify-between w-full">
          <h1 class="line-clamp-2 font-medium text-white">{event.data.name}</h1>
          <p class="text-gray-200 text-xs text-right">Ref: {event.code}</p>
        </div>
      </div>
    ))
  }
</section>
