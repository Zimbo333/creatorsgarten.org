---
import { Icon } from 'react-iconify-icon-wrapper'

import { contentsgarten } from '$constants/contentsgarten'

export interface Props {
  pageRef: string
  file: {
    content?: string;
    revision?: string;
  }
}

const { pageRef, file } = Astro.props

const editable = Astro.cookies.get('authgarten').value
  ? await contentsgarten(Astro.cookies.get('authgarten').value)
      .getEditPermission.query({
        pageRef,
      })
      .then(o => o.granted)
  : false
---

{
  editable && (
    <section class="p-6">
      <h2 class="pb-4 text-center font-medium">MODERATION</h2>
      <div>
        <div class="flex justify-center">
          <button
            onclick={`window.editor.showModal()`}
            class="inline-flex items-center space-x-2"
          >
            <span>Editor</span>
            <Icon icon="pixelarticons:edit" />
          </button>
        </div>
        <dialog
          id="editor"
          class="w-full max-w-4xl border shadow rounded-2xl p-8"
        >
          <main>
            <div class="flex justify-between items-center">
              <h1 class="text-3xl font-medium">EDITOR</h1>

              <form method="dialog">
                <button><Icon icon="pixelarticons:close" width={32} height={32} /></button>
              </form>
            </div>
            <p>
              The editor is quite janky, so please save your changes regularly!
            </p>

            <form method="post">
              {/* prettier-ignore */}
              <input type="hidden" name="pageRef" value={pageRef} />
              <input type="hidden" name="revision" value={file!.revision} />
              <textarea name="content" rows={25} class="my-4 w-full border-2 rounded-md ring-0 p-2 overflow-x-scroll whitespace-nowrap text-sm font-mono">{file!.content}</textarea>
              <button type="submit" class="rounded-xl px-4 py-2 bg-sky-400 text-white font-medium">SAVE</button>
            </form>
          </main>
        </dialog>
      </div>
    </section>
  )
}

<style>
  dialog {
    position: fixed;
    left: 50%;
    right: 50%;
    top: 50%;
    bottom: -25%;
    transform: translate(-50%, -50%);
  }

  dialog::backdrop {
    position: fixed;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    background-color: rgba(255 255 255 / 0.5);
    backdrop-filter: blur(8px);
  }
</style>
